heat_template_version: 2015-04-30

description: >
  Software Config to drive os-net-config for a simple bridge.

parameters:
  ControlPlaneIp:
    default: ''
    description: IP address/subnet on the ctlplane network
    type: string
  ExternalIpSubnet:
    default: ''
    description: IP address/subnet on the external network
    type: string
  InternalApiIpSubnet:
    default: ''
    description: IP address/subnet on the internal API network
    type: string
  StorageIpSubnet:
    default: ''
    description: IP address/subnet on the storage network
    type: string
  StorageMgmtIpSubnet:
    default: ''
    description: IP address/subnet on the storage mgmt network
    type: string
  TenantIpSubnet:
    default: ''
    description: IP address/subnet on the tenant network
    type: string
  ManagementIpSubnet:
    default: ''
    description: IP address/subnet on the management network
    type: string
  ControlPlaneDefaultRoute: # Override this via parameter_defaults
    description: The default route of the control plane network.
    type: string
    default: '192.0.2.1'
  EC2MetadataIp: # Override this via parameter_defaults
    description: The IP address of the EC2 metadata server.
    type: string
    default: '169.254.169.254/32'


resources:
  OsNetConfigImpl:
    type: OS::Heat::StructuredConfig
    properties:
      group: os-apply-config
      config:
        os_net_config:
          network_config:
            -
              type: linux_bridge
              name: {get_input: bridge_name}
              addresses:
                -
                  ip_netmask: {get_param: ControlPlaneIp}
              members:
                -
                  type: interface
                  name: {get_input: interface_name}
                  # force the MAC address of the bridge to this interface
                  primary: true
              routes:
                -
                  ip_netmask: 0.0.0.0/0
                  next_hop: {get_param: ControlPlaneDefaultRoute}
                  default: true
                -
                  ip_netmask: {get_param: EC2MetadataIp}
                  next_hop: {get_param: ControlPlaneDefaultRoute}

outputs:
  OS::stack_id:
    description: The OsNetConfigImpl resource.
    value: {get_resource: OsNetConfigImpl}
